col_types = c("_/-", "i", "c", "_/-", "_/-", '_/-')
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_types = c("_/-", "i", "c", "_/-", "_/-", '_/-')
)
col_types = c("_", "i", "c", "_", "_", '_')
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_types = c("_", "i", "c", "_", "_", '_')
)
corresp_dpt
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_nom", "dpt_nom2", "dpt_nom3", "soundex"))
corresp_dpt
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name)
library(tidyverse)
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name)
corresp_dpt
View(corresp_dpt)
View(corresp_dpt)
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b'))
corresp_dpt
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num)
corresp_dpt
corresp_dpt %>% View()
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num) %>%
save(file = "data-rax/tools/corresp_dpt.csv", compress = "xz")
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num) %>%
save(file = "data-raw/tools/corresp_dpt.csv", compress = "xz")
a <- read_csv("data-raw/tools/corresp_dpt.csv")
a
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num) %>%
save(file = "data-raw/tools/corresp_dpt.rda", compress = "xz")
help(load)
a <- load("data-raw/tools/corresp_dpt.rda")
a
load("D:/Documents/Data_Science/R_stuffs/prenomsFR/data-raw/tools/corresp_dpt.rda")
corresp_dpt
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num) %>%
write_csv(file = "data-raw/tools/corresp_dpt.csv")
corresp_dpt <-
read_csv("data-raw/tools/departement.csv",
col_names = c("index", "dpt_num", "dpt_name", "dpt_name2", "dpt_name3", "soundex")
) %>%
select(dpt_num, dpt_name) %>%
filter(!dpt_num %in% c('2a', '2b')) %>%
add_row(dpt_num = 20, dpt_name = "Corse") %>%
arrange(dpt_num) %>%
write_csv("data-raw/tools/corresp_dpt.csv")
a <- read_csv("data-raw/tools/corresp_dpt.csv")
a
help(left_join)
# Nettoyage et mise en forme des donnees au niveau departemental
prenoms_dpt <-
read_csv2("data-raw/dpt2018.csv", na = c("XX", "XXXX")) %>%
rename(
n = nombre,
sex = sexe,
year = annais,
name = preusuel,
dpt_num = dpt
) %>%
filter(
!is.na(year),
name != "_PRENOMS_RARES"
) %>%
mutate(
name = str_to_title(name),
n = as.integer(n),
sex = if_else(sex == 1, "M", "F")
) %>%
select(year, name, sex, dpt_num, n) %>%
group_by(year, sex, dpt) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(year, sex, name, dpt_num) %>%
left_join(read_csv("data-raw/tools/corresp_dpt.csv"))
# Nettoyage et mise en forme des donnees au niveau departemental
prenoms_dpt <-
read_csv2("data-raw/dpt2018.csv", na = c("XX", "XXXX")) %>%
rename(
n = nombre,
sex = sexe,
year = annais,
name = preusuel,
dpt_num = dpt
) %>%
filter(
!is.na(year),
name != "_PRENOMS_RARES"
) %>%
mutate(
name = str_to_title(name),
n = as.integer(n),
sex = if_else(sex == 1, "M", "F")
) %>%
select(year, name, sex, dpt_num, n) %>%
group_by(year, sex, dpt_num) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(year, sex, name, dpt_num) %>%
left_join(read_csv("data-raw/tools/corresp_dpt.csv"))
prenoms_dpt
prenoms_dpt %>% filter(year = 2010, dpt_num = 34)
prenoms_dpt %>% filter(year == 2010, dpt_num == 34)
prenoms_dpt %>% filter(year == 2010, dpt_num == 34) %>% summarise(sum = sum(prop))
prenoms_dpt %>% filter(year == 2010, dpt_num == 34, sex = 'M') %>% summarise(sum = sum(prop))
prenoms_dpt %>% filter(year == 2010, dpt_num == 34, sex == 'M') %>% summarise(sum = sum(prop))
prenoms_dpt <-
read_csv2("data-raw/dpt2018.csv", na = c("XX", "XXXX")) %>%
rename(
n = nombre,
sex = sexe,
year = annais,
name = preusuel,
dpt_num = dpt
) %>%
filter(
!is.na(year),
name != "_PRENOMS_RARES"
) %>%
mutate(
name = str_to_title(name),
n = as.integer(n),
sex = if_else(sex == 1, "M", "F")
) %>%
group_by(year, sex, dpt_num) %>%
mutate(prop = n / sum(n)) %>%
ungroup() %>%
arrange(year, sex, name, dpt_num) %>%
left_join(read_csv("data-raw/tools/corresp_dpt.csv")) %>%
select(year, name, sex, dpt_num, dpt_name, n)
save(prenoms_dpt, file = "data/prenoms_dpt.rda", compress = "xz")
prenoms_dpt <-
read_csv2("data-raw/dpt2018.csv", na = c("XX", "XXXX")) %>%
rename(
n = nombre,
sex = sexe,
year = annais,
name = preusuel,
dpt_num = dpt
) %>%
filter(
!is.na(year),
name != "_PRENOMS_RARES"
) %>%
mutate(
name = str_to_title(name),
n = as.integer(n),
sex = if_else(sex == 1, "M", "F")
) %>%
left_join(read_csv("data-raw/tools/corresp_dpt.csv")) %>%
arrange(year, sex, name, dpt_num) %>%
select(year, name, sex, dpt_num, dpt_name, n)
save(prenoms_dpt, file = "data/prenoms_dpt.rda", compress = "xz")
help(between)
between(1:12, 5,7)
between(1:12, 7,7)
get_sex <- function(name, birth_year = NULL, birth_date = NULL, age = NULL){
flag <- FALSE
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
} else {
flag <- TRUE
}
prenoms_france %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)} %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
get_sex('Robin')
library(prenomsFr)
get_sex('Robin')
get_sex <- function(name, birth_year = NULL, birth_date = NULL, age = NULL){
flag <- FALSE
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
} else {
flag <- TRUE
}
prenoms_nat %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)} %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
get_sex('Robin')
library(prenomsFr)
estim_sex('Robin')
library(prenomsFr)
estim_sex('Robin')
estim_sex('Julie')
estim_sex('Julie', age = 15)
library(prenomsFr)
warning()
warnings()
estim_sex('Julie', age = 15)
prenoms_nat %>% filter(name = 'Julie')
prenoms_nat %>% filter(name == 'Julie')
estim_sex('ROBIN')
prenoms_nat %>% filter(name == 'JULIE')
prenoms_nat %>% filter(name == 'Julie')
prenoms_nat %>% filter(name == 'Julie') %>% group_by(sex) %>% summarise(n = sum(n))
prenoms_nat %>% filter(name == 'Julie') %>% group_by(sex) %>% summarise(n = sum(n)) %>% ungroup()
prenoms_nat %>% filter(name == 'Julie') %>% group_by(sex) %>% summarise(n = sum(n)) %>% ungroup() %>% filter(n == max(n))
prenoms_nat %>% filter(name == 'Julie') %>% group_by(sex) %>% summarise(n = sum(n)) %>% ungroup() %>% filter(n == max(n)) %>% pull(sex)
estim_sex('Julie')
estim_sex <- function(name, birth_year = NULL, birth_date = NULL, age = NULL){
flag <- FALSE
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
} else {
flag <- TRUE
}
prenoms_nat %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)} %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex('Julie')
estim_sex <- function(name, birth_year = NULL, birth_date = NULL, age = NULL){
flag <- TRUE
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
} else {
flag <- FALSE
}
prenoms_nat %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)} %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex('Julie')
prenoms_nat
prenoms_nat %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)}
flag <- TRUE
prenoms_nat %>%
filter(name == name) %>%
{if (flag) filter(year == ref_year)}
estim_sex <- function(name, birth_year = NULL, birth_date = NULL, age = NULL){
ref_year <- 1900:2018
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
}
prenoms_nat %>%
filter(
name == name,
year %in% ref_year
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex('Julie')
rm(flag)
library(prenomsFr)
estim_sex('Julie')
estim_sex2('Julie')
estim_sex3 <- function(name){
prenoms_nat %>%
filter(
name == name
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex3('Julie')
prenoms_nat %>%
filter(
name == 'Julie'
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
prenoms_nat
estim_sex3 <- function(pname){
prenoms_nat %>%
filter(
name == pname
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex3('Julie')
estim_sex2 <- function(pname, birth_year = NULL, birth_date = NULL, age = NULL){
ref_year <- 1900:2018
if (!missing(birth_date)) {
ref_year <- year(birth_date)
} else if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- year(Sys.Date() - years(age))
}
prenoms_nat %>%
filter(
name == pname,
year %in% ref_year
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex2('Julie')
estim_sex2('Julie', age = 18)
library(lubridate)
estim_sex2('Julie', age = 18)
estim_sex2('Julie', birth_year = 1995)
help("year")
help(years)
years(15)
library(prenomsFr)
estim_sex('Robin', age = 26)
estim_sex2('Robin', age = 26)
estim_sex2('Robin', birth_date = 1995)
lubridate::year(1995)
estim_sex2('Robin', birth_date = "20/04/1995")
date("20/04/1995")
date("1995/04/20")
year(date("1995/04/20"))
estim_sex("Robin", date("1995/04/20"))
estim_sex2("Robin", date("1995/04/20"))
estim_sex2("Robin", birth_date = date("1995/04/20"))
estim_sex <- function(name, birth_year = NULL, age = NULL, birth_date = NULL){
ref_year <- 1900:2018
if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- lubridate::year(Sys.Date() -lubridate:: years(age))
} else if (!missing(birth_date)) {
ref_year <- lubridate::year(birth_date)
}
prenoms_nat %>%
filter(
name == name,
year %in% ref_year
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex('Julie')
estim_sex <- function(name, birth_year = NULL, age = NULL, birth_date = NULL){
first_name = name
ref_year <- 1900:2018
if (!missing(birth_year)) {
ref_year <- birth_year
} else if (!missing(age)) {
ref_year <- lubridate::year(Sys.Date() -lubridate:: years(age))
} else if (!missing(birth_date)) {
ref_year <- lubridate::year(birth_date)
}
prenoms_nat %>%
filter(
name == first_name,
year %in% ref_year
) %>%
group_by(sex) %>%
summarise(
n = sum(n)
) %>%
ungroup() %>%
filter(
n == max(n)
) %>%
pull(sex)
}
estim_sex('Julie')
help(filter)
help(str_to_tittle)
help(str_to_title)
prenoms_dpt
prenoms_nat
